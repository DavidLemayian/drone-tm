networks:
  dtm-network:
    name: dtm-network

volumes:
  db-data:
    name: drone-tm-db-data
  odm-media:
  odm-db-data:

services:
  backend:
    image: ghcr.io/hotosm/drone-tm/backend:ci
    build:
      context: .
      dockerfile: src/backend/Dockerfile
    depends_on:
      - db
      - minio
    ports:
      - ${BACKEND_WEB_APP_PORT:-8000}:8000
    volumes:
      - ${PROJECT_DIR:-.}/src/backend:/project/src/backend
    env_file: .env
    networks:
      - dtm-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: src/frontend/Dockerfile
      target: ${FRONTEND_TARGET_OVERRIDE:-development}
    ports:
      - ${FRONTEND_WEB_APP_PORT:-3040}:3040
    depends_on:
      - minio
    env_file: .env
    networks:
      - dtm-network
    volumes:
      - ${PROJECT_DIR:-.}/src/frontend:/app
      - /var/run/docker.sock:/var/run/docker.sock

  # If error, please upgrade the db with `contrib/pg-upgrade/docker-compose.yml`
  db:
    image: postgis/postgis:16-3.4-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file: .env
    environment:
      LANG: en-GB.utf8
      # POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=en-GB"
    networks:
      - dtm-network
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-dtm} -d ${POSTGRES_DB:-dtm_db}
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  minio:
    image: "docker.io/minio/minio:${MINIO_TAG:-RELEASE.2023-10-25T06-33-25Z}"
    command: server /export --console-address 0.0.0.0:9090 --address 0.0.0.0:9000
    volumes:
      - ${PROJECT_DIR:-.}/DockerData/minio_data:/export
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-dtm_user}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-somelongpassword}
      MINIO_CONSOLE_ADDRESS: ":9090"
    ports:
      - 9000:9000
      - 9090:9090
    networks:
      - dtm-network
    restart: unless-stopped

  createbuckets:
    image: "docker.io/minio/minio:${MINIO_TAG:-RELEASE.2023-10-25T06-33-25Z}"
    entrypoint: >
      /bin/sh -c " mc config host add minio http://minio:9000 \$S3_ACCESS_KEY \$S3_SECRET_KEY; mc mb minio/\$S3_BUCKET_NAME; mc anonymous set download minio/\$S3_BUCKET_NAME/publicuploads/; exit 0; "
    env_file:
      - .env
    depends_on:
      - minio
    networks:
      - dtm-network
    restart: "no"

  migrations:
    build:
      context: .
      dockerfile: src/backend/Dockerfile
    volumes:
      - ${PROJECT_DIR:-.}/src/backend:/project/src/backend
    depends_on:
      - backend
      - db
    env_file:
      - .env
    networks:
      - dtm-network
    entrypoint: ["pdm", "run", "alembic", "upgrade", "head"]
    restart: "no"

  odm-db:
    image: docker.io/opendronemap/webodm_db:latest
    container_name: odm-db
    volumes:
      - odm-db-data:/var/lib/postgresql/data:Z
    ports:
      - 5999:5432
    networks:
      - dtm-network
    restart: unless-stopped
    oom_score_adj: -100

  odm-api:
    image: docker.io/opendronemap/nodeodm:3.5.3
    container_name: odm-api
    networks:
      - dtm-network
    restart: unless-stopped
    oom_score_adj: 500

  odm-web:
    image: docker.io/opendronemap/webodm_webapp:2.5.4
    container_name: odm-web
    entrypoint: /bin/bash -c "chmod +x /webodm/*.sh && /bin/bash -c \"/webodm/wait-for-postgres.sh odm-db /webodm/wait-for-it.sh -t 0 odm-broker:6379 -- /webodm/start.sh\""
    volumes:
      - odm-media:/webodm/app/media:z
    ports:
      - "${WO_PORT}:8000"
    depends_on:
      odm-worker:
        condition: service_started
      odm-set-password:
        condition: service_completed_successfully
    env_file:
      - .env
    networks:
      - dtm-network
    restart: unless-stopped
    oom_score_adj: 0

  odm-broker:
    image: docker.io/redis:7.0.10
    container_name: odm-broker
    networks:
      - dtm-network
    restart: unless-stopped
    oom_score_adj: -500

  odm-worker:
    image: docker.io/opendronemap/webodm_webapp:2.5.4
    container_name: odm-worker
    entrypoint: /bin/bash -c "/webodm/wait-for-postgres.sh odm-db /webodm/wait-for-it.sh -t 0 odm-broker:6379 -- /webodm/wait-for-it.sh -t 0 odm-web:8000 -- /webodm/worker.sh start"
    volumes:
      - odm-media:/webodm/app/media:z
    depends_on:
      odm-db:
        condition: service_started
      odm-broker:
        condition: service_started
    env_file:
      - .env
    networks:
      - dtm-network
    restart: unless-stopped
    oom_score_adj: 250
