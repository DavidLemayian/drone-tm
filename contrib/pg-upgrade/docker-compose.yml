# The services run in sequential order, via depends_on

volumes:
  db-data:
    external: true
    name: drone-tm-db-data

networks:
  pg-upgrade:

services:
  # Check if the upgrade has already be complete --> v16
  db-check-upgrade:
    image: postgis/postgis:16-3.4-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: no
    entrypoint: /bin/sh -c
    command:
      - |
        # The new database directory is empty, so continue upgrade
        if [ ! -f "/var/lib/postgresql/data/PG_VERSION" ]; then
          echo "Database is empty"
          exit 0
        fi

        if [ "$(cat /var/lib/postgresql/data/PG_VERSION)" = "16" ]; then
          # The database is already upgraded, skip
          echo "Database already upgraded"
          exit 1
        else
          # The database is not upgraded, continue
          echo "Database not upgraded yet"
          exit 0
        fi

  # Only required as we are migrating from filesystem to volume
  db-to-volume:
    image: postgis/postgis:16-3.4-alpine
    depends_on:
      db-check-upgrade:
        condition: service_completed_successfully
    volumes:
      - ${PROJECT_DIR:-../..}/DockerData/dtm_db_data:/db-data-old
      - db-data:/db-data-new
    restart: no
    entrypoint: /bin/sh -c
    command:
      - |
        rm -rf /db-data-new/*
        cp -r /db-data-old/* /db-data-new/
        echo 'Copied postgres data to docker volume'

  # Do the db upgrade
  db-upgrade:
    image: ghcr.io/hotosm/drone-tm/pg-upgrade:16-3.4-alpine
    build: .
    depends_on:
      db-to-volume:
        condition: service_completed_successfully
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file: ../../.env
    environment:
      PGAUTO_ONESHOT: yes
    restart: no

  # Run maintenance tasks
  db-maintenance:
    image: postgis/postgis:16-3.4-alpine
    depends_on:
      db-upgrade:
        condition: service_completed_successfully
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file: ../../.env
    restart: no
    entrypoint: /bin/sh -c
    command:
      - |
        gosu postgres pg_ctl start -D /var/lib/postgresql/data

        # Upgrade PostGIS extension
        PGPASSWORD=dtm \
        psql --host=localhost --username=dtm dtm_db -c '
          ALTER EXTENSION "postgis" UPDATE;
        '

        # Rebuild statistics use vacuum
        PGPASSWORD=${POSTGRES_PASSWORD} \
        vacuumdb \
        --host=localhost \
        --username=${POSTGRES_USER} \
        --all \
        --analyze-in-stages
